{% if task_steps and step_index -%}
Task is split into multiple steps. Previously generated steps can be one of the following:
* `command` - command to run
* `save_file` or `code_change` -  create new or update existing file
* `modify_file` - update large existing file
* `human_intervention` - if the human needs to do something

{% if step_index > 0 %}Here is the list of steps that have been executed:
{% for step in task_steps %}{% if loop.index0 < step_index %}
{%- if step[step.type].content -%}
    {% set _ = step[step.type].update({'content': '...'}) %}
{%- endif -%}
{{ step }}
{% endif %}{% endfor %}{% endif %}
Here is the step you are currently debugging:
{{ task_steps[step_index] }}
{% if step_index < task_steps|length - 1 %}Here are steps that will be executed once debugging is done:
{% for step in task_steps %}{% if loop.index0 > step_index %}
{%- if step[step.type].content -%}
    {% set _ = step[step.type].update({'content': '...'}) %}
{%- endif -%}
{{ step }}
{% endif %}{% endfor %}{% endif %}
{%- endif %}
{% if issue_description -%}
You wanted me to check this - `{{ issue_description }}` but there was a problem
{%- else -%}
Now, we need to debug this issue
{%- endif -%}
{% if command %} and we need to be able to execute `{{ command }}` successfully. {% endif %}.
{% if user_input %}I looked into this issue. I want you to take my findings as important part of debugging this issue. Here are my findings:
```
{{ user_input }}
```{% endif -%}
I want you to create a list of steps that are needed to debug this issue.

Each step can be either:

* `command` - command to run (must be able to run on a {{ os }} machine, assume current working directory is project root folder)
* `code_change` -  step will change the code and you need to thoroughly describe what needs to be implemented. I will implement the requested changes and let you know.
* `human_intervention` - if you need the human to do something, use this type of step and explain in details what you want the human to do.

Also, make sure that at least the last step has `check_if_fixed` set to TRUE.

**IMPORTANT**
When you think about in which file should the new code go to, always try to make files as small as possible and put code in more smaller files rather than in one big file. Whenever a file becomes too large (more than 50 lines of code) split it into smaller files.

{# After this, you need to decide what to do next. You can rerun the command `{{ command }}` to check if the problem is fixed or run another command with `run_command` or change more code with `implement_code_changes`. #}
