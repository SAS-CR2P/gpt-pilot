"""store request input exec logs to db

Revision ID: fd206d3095d0
Revises: e7b54beadf8f
Create Date: 2024-05-09 08:25:10.698607

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "fd206d3095d0"
down_revision: Union[str, None] = "e7b54beadf8f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exec_logs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("branch_id", sa.Uuid(), nullable=False),
        sa.Column("project_state_id", sa.Uuid(), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=False),
        sa.Column("duration", sa.Float(), nullable=False),
        sa.Column("cmd", sa.String(), nullable=False),
        sa.Column("cwd", sa.String(), nullable=False),
        sa.Column("env", sa.JSON(), nullable=False),
        sa.Column("timeout", sa.Float(), nullable=True),
        sa.Column("status_code", sa.Integer(), nullable=True),
        sa.Column("stdout", sa.String(), nullable=False),
        sa.Column("stderr", sa.String(), nullable=False),
        sa.Column("analysis", sa.String(), nullable=False),
        sa.Column("success", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["branch_id"], ["branches.id"], name=op.f("fk_exec_logs_branch_id_branches"), ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["project_state_id"],
            ["project_states.id"],
            name=op.f("fk_exec_logs_project_state_id_project_states"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exec_logs")),
    )
    op.create_table(
        "llm_requests",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("branch_id", sa.Uuid(), nullable=False),
        sa.Column("project_state_id", sa.Uuid(), nullable=True),
        sa.Column("started_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("provider", sa.String(), nullable=False),
        sa.Column("model", sa.String(), nullable=False),
        sa.Column("temperature", sa.Float(), nullable=False),
        sa.Column("messages", sa.JSON(), nullable=False),
        sa.Column("response", sa.String(), nullable=True),
        sa.Column("prompt_tokens", sa.Integer(), nullable=False),
        sa.Column("completion_tokens", sa.Integer(), nullable=False),
        sa.Column("duration", sa.Float(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("error", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["branch_id"], ["branches.id"], name=op.f("fk_llm_requests_branch_id_branches"), ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["project_state_id"],
            ["project_states.id"],
            name=op.f("fk_llm_requests_project_state_id_project_states"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_llm_requests")),
    )
    op.create_table(
        "user_inputs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("branch_id", sa.Uuid(), nullable=False),
        sa.Column("project_state_id", sa.Uuid(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("question", sa.String(), nullable=False),
        sa.Column("answer_text", sa.String(), nullable=True),
        sa.Column("answer_button", sa.String(), nullable=True),
        sa.Column("cancelled", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["branch_id"], ["branches.id"], name=op.f("fk_user_inputs_branch_id_branches"), ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["project_state_id"],
            ["project_states.id"],
            name=op.f("fk_user_inputs_project_state_id_project_states"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_inputs")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_inputs")
    op.drop_table("llm_requests")
    op.drop_table("exec_logs")
    # ### end Alembic commands ###
